#C칩digo para el punto 3 del primer taller de problemas

import numpy as np
import matplotlib.pyplot as plt

# Par치metros
omega_c = 1.0  # Frecuencia ciclotr칩nica
cEy_over_B = 1.0  # Valor de cE_y / B

# Definimos los valores de A para los tres casos
A_values = [1.5, 0.5, 1.0]  # A > |cE_y / B|, A < |cE_y / B|, A = |cE_y / B|

# Tiempo
t = np.linspace(0, 10, 1000)

# Funci칩n para calcular x(t) y y(t)
def trajectory(t, A, cEy_over_B, omega_c):
    x = (A / omega_c) * np.sin(omega_c * t) + (cEy_over_B) * t
    y = (A / omega_c) * (np.cos(omega_c * t) - 1)
    return x, y

# Graficar para cada caso
plt.figure(figsize=(15, 5))

for i, A in enumerate(A_values):
    x, y = trajectory(t, A, cEy_over_B, omega_c)

    plt.subplot(1, 3, i+1)
    plt.plot(x, y, label=f'A = {A}')
    plt.title(f'A {">" if A > cEy_over_B else "<" if A < cEy_over_B else "="} |cE_y / B|')
    plt.xlabel('x(t)')
    plt.ylabel('y(t)')
    plt.legend()
    plt.grid(True)

plt.tight_layout()
plt.show()
